{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","placeholder","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,sBAAMC,SAZW,SAACC,GACjBA,EAAEC,iBAEAJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,MAOlB,SAEI,uBACIO,YAAc,kBACdC,KAAO,OACPC,MAASV,EACTW,SAtBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAON,GAAP,uBAAAO,EAAA,6DACbC,EADa,mGACqFC,UAAUT,IAD/F,SAEAU,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAQ,CAACC,GAAID,EAAIC,GAChBC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARnB,kBAWZM,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,sBAAKc,UAAY,0CAAjB,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAgB,IAAfzB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAY,IAAD,EACVR,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHuB,mBAC7BC,EAD6B,KACtBC,EADsB,KAcpC,OARAC,qBAAU,WACNvB,EAAQN,GAAU8B,MAAK,SAACC,GACpBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAEjB,CAAC1B,IAEE2B,EDNyBK,CAAahC,GAAhCmB,EANsB,EAM5BN,KAAca,EANc,EAMdA,QAErB,OACI,eAAC,WAAD,WACI,oBAAIJ,UAAU,2CAAd,SAA0DtB,IAEzD0B,GAAW,2CAEZ,qBAAKJ,UAAW,YAAhB,SAGaH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAA+BA,GAAZA,EAAIC,aEnBtCgB,EAAe,WAAM,MAEMzC,mBAAS,CAAC,kBAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAQ9B,OACI,gCACI,sBAAK+B,UAAY,YAAjB,UACI,qBAAKC,IAAM,mBACX,8CAEJ,cAAC,EAAD,CAAchC,cAAgBA,IAC9B,uBAIA,6BACK2C,EAAWnB,KAAI,SAAAf,GAAQ,OACpB,cAAC,EAAD,CAA0BA,SAAUA,GAApBA,YCnBpCmC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fad808e1.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n         e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(category => [inputValue, ...category ]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n           \r\n            <input\r\n                placeholder = \"nueva categoria\"\r\n                type = \"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n\r\n   \r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=FCJejsFZs7SvkGr3b3Mp8cQOr44kEy9Z&limit=10&q=${encodeURI(category)}`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n       return  {id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url}\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn \"> \r\n            <img src={url} alt={title}/>\r\n            <p>{title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from './hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    /* const [images, setImages] = useState([]);\r\n\r\n    */\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <Fragment> \r\n            <h3 className=\"animate__fadeInDownBig animate__delay-2s\">{category}</h3>\r\n\r\n            {loading && <p>Loading...</p>}\r\n\r\n            <div className =\"card-grid\">\r\n                    {\r\n\r\n                         images.map(img =>(\r\n                            <GifGridItem key= {img.id} {...img}/>\r\n                        ))\r\n                    }\r\n            </div> \r\n        </Fragment>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category).then((imgs) => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })})\r\n     }, [category]); \r\n\r\n    return state\r\n  }","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    //const categories = ['The Godfather', 'Goodfellas', 'Scarface'];\r\n    const [categories, setCategories] = useState(['The Godfather']);\r\n\r\n   /*  const handleAdd = ()=>{\r\n        setCategories([...categories, 'Casino']);\r\n    } */\r\n\r\n    return (\r\n        <div>\r\n            <div className = \"GifTitulo\">\r\n                <img src = \"img/banana.gif\"/>\r\n                <h2>Busca Gif</h2>\r\n            </div>\r\n            <AddCategory  setCategories ={setCategories}/>\r\n            <hr />\r\n\r\n          \r\n\r\n            <ol>\r\n                {categories.map(category =>(\r\n                    <GifGrid key = {category} category={category} />\r\n                ))\r\n                } \r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport '../src/index.css';\r\nimport { GifExpertApp } from './GifExpertApp';\r\n\r\nReactDOM.render(\r\n    <GifExpertApp/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}